{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","dbService","getFirestore","authService","getAuth","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","GithubAuthProvider","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","storage","storageRef","ref","deleteObject","toggleEditing","updateDoc","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","getDownloadURL","toString","addDoc","collection","createdAt","serverTimestamp","creatorId","maxLength","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","accept","Home","nweets","setNweets","useEffect","q","query","orderBy","unsubscribe","onSnapshot","querySnapshot","nextNweets","docs","map","Navigation","to","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","currentUser","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ded90dad.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport {getStorage} from \"firebase/storage\";\r\n\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\n//export default initializeApp(firebaseConfig);\r\nconst app = initializeApp(firebaseConfig);\r\nexport const dbService = getFirestore();\r\nexport const authService = getAuth();\r\nexport const storageService = getStorage(app);\r\n","import {authService} from \"fbase\";\r\nimport {useState} from \"react\";\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    } from '@firebase/auth';\r\n    \r\nconst AuthForm=()=>{\r\n    const [email,setEmail] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [newAccount,setNewAccount] = useState(true);\r\n    const [error,setError] = useState(\"\");\r\n\r\n    const onChange = (event) =>{\r\n        const{\r\n            target: {name,value},\r\n        } = event;\r\n        if(name===\"email\"){\r\n            setEmail(value);\r\n        }else if (name ===\"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    \r\n    const onSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                data = await createUserWithEmailAndPassword(authService, email, password)\r\n            } else {\r\n                data = await signInWithEmailAndPassword(authService, email, password)\r\n            }\r\n                \r\n            console.log(data);\r\n        }catch(error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () =>setNewAccount((prev)=>!prev);\r\n\r\n    return(\r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n            <input name =\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange}/>\r\n            <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n            <input type=\"submit\" value={newAccount ? \"Create Account\":\"Log In\"}/>\r\n            {error}\r\n        </form>\r\n        <span onClick={toggleAccount}>\r\n            {newAccount? \"Sign In\": \"Create Account\"}\r\n        </span>\r\n        </>\r\n    );\r\n};\r\nexport default AuthForm;\r\n","import {authService} from \"fbase\";\r\nimport {getAuth,\r\n    GoogleAuthProvider,\r\n    GithubAuthProvider,\r\n    signInWithPopup,\r\n    } from '@firebase/auth';\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick =async (event) =>{\r\n        const{\r\n            target: {name},\r\n        } =event;\r\n\r\n        let provider;\r\n        if(name===\"google\"){\r\n            provider = new GoogleAuthProvider();\r\n            signInWithPopup(authService,provider);\r\n        }else if(name===\"github\"){\r\n            provider = new GithubAuthProvider();\r\n            signInWithPopup(authService,provider);\r\n        }\r\n        console.log(name,\"....\");\r\n\r\n    };\r\nreturn (\r\n    <div>\r\n        <AuthForm/>\r\n        <div>\r\n            <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\r\n            <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\r\n        </div>\r\n        \r\n    </div>\r\n);\r\n};\r\n\r\nexport default Auth;\r\n","import {useState} from \"react\";\r\nimport { dbService} from \"fbase\";\r\nimport { updateDoc, deleteDoc, doc } from \"@firebase/firestore\";\r\nimport { getStorage, ref,deleteObject} from \"@firebase/storage\";\r\n\r\nconst Nweet = ({nweetObj,isOwner})=>{\r\n    const [editing,setEditing] = useState(false);\r\n    const [newNweet,setNewNweet] =useState(nweetObj.text);\r\n\r\n    const onDeleteClick= async ()=>{\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n\r\n        if(ok){\r\n            await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\r\n            if (nweetObj.attachmentUrl!==\"\"){\r\n                const storage =getStorage();\r\n                const storageRef = ref(storage, nweetObj.attachmentUrl);\r\n                deleteObject(storageRef);\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    const toggleEditing =()=>{\r\n        setEditing((prev)=>!prev);\r\n    };\r\n    const onChange=(event)=>{\r\n        const{\r\n            target:{value},\r\n\r\n        }=event;\r\n        setNewNweet(value);\r\n    }\r\n    const onSubmit=async(event)=>{\r\n        event.preventDefault();\r\n\r\n        await updateDoc(doc(dbService,`nweets/${nweetObj.id}`),{\r\n            text:newNweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n\r\n    return(\r\n    <div>\r\n        {editing?(\r\n            <>\r\n            <form onSubmit={onSubmit}>\r\n                <input onChange={onChange} value={newNweet} required/>\r\n                <input type=\"submit\" value=\"수정하기\"/>\r\n            </form>\r\n            <button onClick={toggleEditing}>cancle</button>\r\n            </>\r\n        ):(\r\n            <>\r\n            <h4>{nweetObj.text}</h4>\r\n            {nweetObj.attachmentUrl&&(\r\n                <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/>\r\n            )}\r\n            {isOwner &&(\r\n                <>\r\n                <button onClick={onDeleteClick}>Delete nweet</button>\r\n                <button onClick={toggleEditing}>Edit Nweet</button>\r\n                </>\r\n            )}            \r\n            </>\r\n        )}\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Nweet;\r\n","import {useState} from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport { getStorage, ref,getDownloadURL,uploadString } from \"@firebase/storage\";\r\nimport { collection,query, onSnapshot, orderBy, addDoc, serverTimestamp} from \"@firebase/firestore\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst NweetFactory=({userObj})=>{\r\n    const [nweet,setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] =useState(\"\");\r\n\r\n    const onSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n\r\n        if(attachment!==\"\"){\r\n            const storage =getStorage();\r\n            const storageRef = ref(storage,'images');\r\n            const attachmentRef =ref(storageRef,`${userObj.uid}/${uuidv4()}`);\r\n            const uploadTask = await uploadString(attachmentRef,attachment,'data_url');    \r\n            attachmentUrl=(await getDownloadURL(attachmentRef)).toString();\r\n        }\r\n         \r\n        const docRef = await addDoc(collection(dbService,\"nweets\"),{\r\n            text:nweet,\r\n            createdAt:serverTimestamp(),\r\n            creatorId:userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n\r\n        setNweet(\"\"); \r\n        setAttachment(\"\");\r\n\r\n    };\r\n    const onChange = (event) =>{\r\n        event.preventDefault();\r\n        const{\r\n            target:{value},\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) =>{\r\n        const{\r\n            target:{files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent)=>{\r\n            const{\r\n                currentTarget:{result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n\r\n        reader.readAsDataURL(theFile);\r\n\r\n        };\r\n\r\n    const onClearAttachment=()=> setAttachment(\"\");\r\n\r\n    return(\r\n        <form onSubmit={onSubmit}>\r\n        <input value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120}/>\r\n        <input type=\"file\" onChange={onFileChange} accept=\"image/*\"/>\r\n        <input type=\"submit\" value=\"Nweet\"/>\r\n        {attachment&& (\r\n            <div>\r\n            <img src={attachment} width =\"50px\" height=\"50px\"/>\r\n            <button onClick={onClearAttachment}>clear</button>\r\n            </div>\r\n        )}\r\n    </form>\r\n    )\r\n};\r\n\r\nexport default NweetFactory;\r\n","import {useState,useEffect} from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport { collection,query, onSnapshot, orderBy, addDoc, serverTimestamp} from \"@firebase/firestore\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets,setNweets] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const q = query(collection(dbService, 'nweets'), orderBy('createdAt', 'desc'));\r\n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n        const nextNweets = querySnapshot.docs.map((doc) => {\r\n        return {\r\n        id: doc.id,\r\n        ...doc.data(),\r\n        }\r\n        })\r\n        setNweets(nextNweets);\r\n        })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    },[]);\r\nreturn(\r\n    <>\r\n    <NweetFactory userObj={userObj} />\r\n        <div>\r\n            {nweets.map((nweet)=>(\r\n                <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId ===userObj.uid}/>\r\n            ))}\r\n        </div>\r\n\r\n    </> \r\n);\r\n}\r\n\r\nexport default Home;\r\n","import {Link} from \"react-router-dom\";\r\n\r\nconst Navigation = ({userObj}) =>{\r\n    return(\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { collection,query,where,getDocs,orderBy } from \"@firebase/firestore\";\r\nimport {  updateProfile } from \"firebase/auth\";\r\nimport {authService,dbService} from \"fbase\";\r\nimport {useEffect,useState} from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Profile = ({userObj,refreshUser}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName,setNewDisplayName] = useState(\"\");\r\n\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onSubmit=async(event)=>{\r\n        event.preventDefault();\r\n\r\n        if(userObj.displayName!== newDisplayName){\r\n            try{\r\n                await updateProfile(authService.currentUser,{displayName:newDisplayName});\r\n                refreshUser();\r\n            }catch (err) {\r\n                console.log(err,\"!!!\");\r\n            }\r\n        }\r\n\r\n\r\n    };\r\n    const onChange=(event)=>{\r\n        const{\r\n            target:{value},\r\n        }= event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    // const getMyNweets = async()=>{\r\n        \r\n    //     const q= query(collection(dbService,\"nweets\"),where(\"creatorId\",\"==\",userObj.uid),orderBy(\"createdAt\",\"asc\"));\r\n    //     const nweets = await getDocs(q);\r\n    //     nweets.forEach((doc)=>{\r\n    //         console.log(doc.id, \"=>\",doc.data());\r\n    //     })\r\n\r\n    // };\r\n\r\n    // useEffect(()=>{\r\n    //     getMyNweets();\r\n    // },[]);\r\n\r\n    return(\r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n            <input type=\"text\" placeholder=\"Display name\" onChange={onChange} value={newDisplayName}/>\r\n            <input type=\"submit\" value=\"Update Profile\"/>\r\n        </form>\r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\nimport Profile from \"routes/Profile\";\r\nconst AppRouter = ({isLoggedIn,userObj,refreshUser}) =>{\r\n    return(\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ?(\r\n                    <>\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj={userObj}/>\r\n                    </Route>\r\n                    <Route exact path=\"/profile\" >\r\n                        <Profile userObj ={userObj} refreshUser={refreshUser}/>\r\n                    </Route>\r\n                    </>\r\n                ):(\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import {useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n    const [init,setInit] = useState(false);\n\n    const[userObj,setUserObj] = useState(null);\n\n    const refreshUser=()=>{\n        const user = authService.currentUser;\n        setUserObj({\n            uid:user.uid,\n            displayName:user.displayName,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    }\n    useEffect(()=>{\n        authService.onAuthStateChanged((user)=> {\n         if (user){\n            //  setIsLoggedIn(user);\n             setUserObj({\n                uid:user.uid,\n                displayName:user.displayName,\n                updateProfile: (args) => user.updateProfile(args),\n\n            });\n         }else{\n             setUserObj(false);\n         }\n         setInit(true);\n    });\n    },[]);\n    return(\n        <>\n        {init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser}/> : \"initializing...\"}\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"components/App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}